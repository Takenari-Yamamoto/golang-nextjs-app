version: "3"

services:
  backend:
    build:
      context: .
      dockerfile: backend/docker/golang/Dockerfile
    container_name: backend
    tty: true
    working_dir: /go/src/app
    depends_on:
      - db
    environment:
      - FIREBASE_CREDENTIALS_FILE=/Users/takenariyamamoto/Downloads/golang-nextjs-app-firebase-adminsdk-xbyxa-6027c29d3d.json
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=golang_nextjs
    links:
      - db:postgresql
    volumes:
      - ./backend:/go/src/app
      - ${FIREBASE_CREDENTIALS_FILE}:/go/src/app/config/firebase_credentials.json
    ports:
      - "8000:8000"
    networks:
      - app-network

  db:
    build:
      context: .
      dockerfile: backend/docker/postgres/Dockerfile
    container_name: postgresql
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-golang_nextjs}
    networks:
      - app-network

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: frontend
  #   tty: true
  #   working_dir: /app
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./frontend:/app
  #   networks:
  #     - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
