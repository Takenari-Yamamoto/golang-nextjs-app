// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteUsersIDHandlerFunc turns a function with the right signature into a delete users ID handler
type DeleteUsersIDHandlerFunc func(DeleteUsersIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteUsersIDHandlerFunc) Handle(params DeleteUsersIDParams) middleware.Responder {
	return fn(params)
}

// DeleteUsersIDHandler interface for that can handle valid delete users ID params
type DeleteUsersIDHandler interface {
	Handle(DeleteUsersIDParams) middleware.Responder
}

// NewDeleteUsersID creates a new http.Handler for the delete users ID operation
func NewDeleteUsersID(ctx *middleware.Context, handler DeleteUsersIDHandler) *DeleteUsersID {
	return &DeleteUsersID{Context: ctx, Handler: handler}
}

/*
	DeleteUsersID swagger:route DELETE /users/{id} deleteUsersId

Delete a user
*/
type DeleteUsersID struct {
	Context *middleware.Context
	Handler DeleteUsersIDHandler
}

func (o *DeleteUsersID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteUsersIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
