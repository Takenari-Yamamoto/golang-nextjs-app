// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a sample API",
    "title": "Golang Next.js API",
    "version": "1.0.0"
  },
  "host": "localhost:5000",
  "basePath": "/v1",
  "paths": {
    "/tasks": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Get a list of tasks",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Get a task by ID",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the task to get",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Get a list of users",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Get a user by ID",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the user to get",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Task": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "created_by": {
          "type": "string"
        },
        "done": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "age": {
          "type": "integer"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a sample API",
    "title": "Golang Next.js API",
    "version": "1.0.0"
  },
  "host": "localhost:5000",
  "basePath": "/v1",
  "paths": {
    "/tasks": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Get a list of tasks",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Get a task by ID",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the task to get",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Get a list of users",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Get a user by ID",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the user to get",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Task": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "created_by": {
          "type": "string"
        },
        "done": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "age": {
          "type": "integer"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    }
  }
}`))
}
